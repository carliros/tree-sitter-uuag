data ActionStep
  | ActionStep name :: String
  | ShortStep actionStep :: ActionStep

ATTR Docs Doc [ level : Int | | ]

attr Every Des
   syn transformed :: Int, pep :: Bool
   inh qa :: String
   chn qw :: Bool

ATTR Tree [ | | value USE {+} {0} : Int ]

TYPE Strings = [String]
type Cadenas = [{String}]

SEM Tree
  | Bin lhs.result = {Haskell}
           .match = {Int}
         res.des = {String}
         loc.min    = { min @left.min @right.min }
         loc.Tree = { min dsds }
         loc.Tree id = { min dsds }
         loc.Tree id@id2 = { min dsds }
         loc.Tree () = { min dsds }
         loc.Tree (id) = { min dsds }
         loc.Tree (id@id2) = { min dsds }
         loc.Tree (id@id2,id) = { min dsds }
         loc.Tree _ = { min dsds }
         loc.res = { min dsds }
         loc.res@res2 = { min dsds }
         loc.res@(id) = { min dsds }
         loc.res@(ss, (id)) = { min dsds }
         loc.res@_ = { min dsds }
         loc.(id) = { min dsds }
         loc._ = { min dsds }

{
main :: IO()
main = putstrLn "Hi"
}

INCLUDE "another.ag"
